{
    "contents" : "---\ntitle: \"JSON\"\nauthor: \"daigazi\"\ndate: \"Thursday, November 05, 2015\"\noutput: html_document\n---\n# JSON语法\nJSON(JavaScript Object Notation) 是一种轻量级的数据交换格式，是一种`结构语言`,是常用的APIs格式之一`（application programming interfaces）`。\n语法形式有点像C语言等，主要格式是\"firstName\":\"John\".\n\n## JSON 语法规则\n\n* JSON 语法是 JavaScript 对象表示语法的子集。\n+ 数据在键值对中\n+ 数据由逗号分隔\n+ 花括号保存对象\n+ 方括号保存数组\n\n## JSON 名称/值对\n\nJSON 数据的书写格式是：名称/值对。名称/值对组合中的名称写在前面（在双引号中），值\n对写在后面(同样在双引号中)，中间用冒号隔开：\n\n*  `\"firstName\":\"John\"`\n这很容易理解，等价于这条 JavaScript 语句：`firstName=\"John\"`\n\n+ JSON 值\n\n        + JSON 值可以是：\n        + 数字（整数或浮点数）\n        + 字符串（在双引号中）\n        + 逻辑值（true 或 false）\n        + 数组（在方括号中）\n        + 对象（在花括号中）\n        + null\n示列如下：\n```{r,eval=FALSE}\n{\n    \"people\":[\n        {\"firstName\":\"Brett\",\"lastName\":\"McLaughlin\",\"email\":\"aaaa\"},\n        {\"firstName\":\"Jason\",\"lastName\":\"Hunter\",\"email\":\"bbbb\"},\n        {\"firstName\":\"Elliotte\",\"lastName\":\"Harold\",\"email\":\"cccc\"}\n    ]\n}\n```\n\n# 读取JSON例子\n\n## jsonlite包\n\n```{r,warning=F,message=FALSE}\nlibrary(knitr)\nlibrary(jsonlite)\njsonData <- fromJSON(\"https://api.github.com/users/jtleek/repos\")\nclass(jsonData)\nlibrary(pryr)\notype(jsonData)\nnames(jsonData)\nnames(jsonData$owner) #jsonData$owner还是一个data.frame\nclass(jsonData$owner)\njsonData$owner$login\n\n```\n### 展开嵌套的数据框\nflattern(x,recursive = TRUE)\n\n* x        a data frame\n\n* recursive\tflatten recursively\n```{r,eval=FALSE}\nclass(flatten(jsonData))\ndf=flatten(jsonData)\nstr(df)\nwhich(names(df)==\"html_url\",arr.ind = T)\nwhich(names(jsonData)==\"html_url\",arr.ind = T)\n```\n\n\n\n## data.frame与JSON互转\n\n```{r}\nmyjson <- toJSON(iris, pretty=TRUE)\n#cat(myjson) #输出符合JSON格式的文档\n#convert json back to object\niris2 <- fromJSON(myjson)\nprint(head(iris2))\n```\n\n\n\n",
    "created" : 1446707882090.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1801365732",
    "id" : "8E62E61D",
    "lastKnownWriteTime" : 1446711064,
    "path" : "D:/Git/stock/JSON.Rmd",
    "project_path" : "JSON.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}